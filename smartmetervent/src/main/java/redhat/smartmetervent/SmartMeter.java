package redhat.smartmetervent;

/**
 * This class was automatically generated by the data modeler tool.
 */

@org.kie.api.definition.type.Role(org.kie.api.definition.type.Role.Type.EVENT)
@org.kie.api.definition.type.Timestamp("timestamp")
public class SmartMeter implements java.io.Serializable
{

   static final long serialVersionUID = 1L;

   private java.lang.String utility;
   private java.lang.String meterID;
   private java.lang.String amiGUIID;
   private java.lang.String amiMac;
   private java.lang.String type;
   private java.lang.String address;
   private java.lang.String messageID;
   private java.util.Date timestamp;
   private java.lang.String zone;


   public SmartMeter()
   {
   }

   public java.lang.String getUtility()
   {
      return this.utility;
   }

   public void setUtility(java.lang.String utility)
   {
      this.utility = utility;
   }

   public java.lang.String getMeterID()
   {
      return this.meterID;
   }

   public void setMeterID(java.lang.String meterID)
   {
      this.meterID = meterID;
   }

   public java.lang.String getAmiGUIID()
   {
      return this.amiGUIID;
   }

   public void setAmiGUIID(java.lang.String amiGUIID)
   {
      this.amiGUIID = amiGUIID;
   }

   public java.lang.String getAmiMac()
   {
      return this.amiMac;
   }

   public void setAmiMac(java.lang.String amiMac)
   {
      this.amiMac = amiMac;
   }

   public java.lang.String getType()
   {
      return this.type;
   }

   public void setType(java.lang.String type)
   {
      this.type = type;
   }

   public java.lang.String getAddress()
   {
      return this.address;
   }

   public void setAddress(java.lang.String address)
   {
      this.address = address;
   }

   public java.lang.String getMessageID()
   {
      return this.messageID;
   }

   public void setMessageID(java.lang.String messageID)
   {
      this.messageID = messageID;
   }

   public java.util.Date getTimestamp()
   {
      return this.timestamp;
   }

   public void setTimestamp(java.util.Date timestamp)
   {
      this.timestamp = timestamp;
   }

   public java.lang.String getZone()
   {
      return this.zone;
   }

   public void setZone(java.lang.String zone)
   {
      this.zone = zone;
   }

  

  @Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((address == null) ? 0 : address.hashCode());
		result = prime * result + ((amiGUIID == null) ? 0 : amiGUIID.hashCode());
		result = prime * result + ((amiMac == null) ? 0 : amiMac.hashCode());
		result = prime * result + ((messageID == null) ? 0 : messageID.hashCode());
		result = prime * result + ((meterID == null) ? 0 : meterID.hashCode());
		result = prime * result + ((timestamp == null) ? 0 : timestamp.hashCode());
		result = prime * result + ((type == null) ? 0 : type.hashCode());
		result = prime * result + ((utility == null) ? 0 : utility.hashCode());
		result = prime * result + ((zone == null) ? 0 : zone.hashCode());
		return result;
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		SmartMeter other = (SmartMeter) obj;
		if (address == null) {
			if (other.address != null)
				return false;
		} else if (!address.equals(other.address))
			return false;
		if (amiGUIID == null) {
			if (other.amiGUIID != null)
				return false;
		} else if (!amiGUIID.equals(other.amiGUIID))
			return false;
		if (amiMac == null) {
			if (other.amiMac != null)
				return false;
		} else if (!amiMac.equals(other.amiMac))
			return false;
		if (messageID == null) {
			if (other.messageID != null)
				return false;
		} else if (!messageID.equals(other.messageID))
			return false;
		if (meterID == null) {
			if (other.meterID != null)
				return false;
		} else if (!meterID.equals(other.meterID))
			return false;
		if (timestamp == null) {
			if (other.timestamp != null)
				return false;
		} else if (!timestamp.equals(other.timestamp))
			return false;
		if (type == null) {
			if (other.type != null)
				return false;
		} else if (!type.equals(other.type))
			return false;
		if (utility == null) {
			if (other.utility != null)
				return false;
		} else if (!utility.equals(other.utility))
			return false;
		if (zone == null) {
			if (other.zone != null)
				return false;
		} else if (!zone.equals(other.zone))
			return false;
		return true;
	}

}