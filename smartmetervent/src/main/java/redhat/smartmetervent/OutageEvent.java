package redhat.smartmetervent;

/**
 * This class was automatically generated by the data modeler tool.
 */

@org.kie.api.definition.type.Role(org.kie.api.definition.type.Role.Type.EVENT)
@org.kie.api.definition.type.Timestamp("timestamp")
public class OutageEvent implements java.io.Serializable
{

   static final long serialVersionUID = 1L;

   private java.lang.String meterID;
   private java.util.Date timestamp;
   private java.lang.String zone;

   public OutageEvent()
   {
   }

   public java.lang.String getMeterID()
   {
      return this.meterID;
   }

   public void setMeterID(java.lang.String meterID)
   {
      this.meterID = meterID;
   }

   public java.util.Date getTimestamp()
   {
      return this.timestamp;
   }

   public void setTimestamp(java.util.Date timestamp)
   {
      this.timestamp = timestamp;
   }

   public java.lang.String getZone()
   {
      return this.zone;
   }

   public void setZone(java.lang.String zone)
   {
      this.zone = zone;
   }

   
   public OutageEvent(java.lang.String meterID, java.util.Date timestamp,
         java.lang.String zone)
   {
      this.meterID = meterID;
      this.timestamp = timestamp;
      this.zone = zone;
   }
   @Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((meterID == null) ? 0 : meterID.hashCode());
		result = prime * result + ((timestamp == null) ? 0 : timestamp.hashCode());
		result = prime * result + ((zone == null) ? 0 : zone.hashCode());
		return result;
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		OutageEvent other = (OutageEvent) obj;
		if (meterID == null) {
			if (other.meterID != null)
				return false;
		} else if (!meterID.equals(other.meterID))
			return false;
		if (timestamp == null) {
			if (other.timestamp != null)
				return false;
		} else if (!timestamp.equals(other.timestamp))
			return false;
		if (zone == null) {
			if (other.zone != null)
				return false;
		} else if (!zone.equals(other.zone))
			return false;
		return true;
	}

}